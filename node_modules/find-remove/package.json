{
  "_args": [
    [
      {
        "raw": "find-remove@^1.0.0",
        "scope": null,
        "escapedName": "find-remove",
        "name": "find-remove",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Volumes/lmssd01/Workspaces/repository/git/reactjs/react-game-of-life-2/node_modules/create-react-app-sass"
    ]
  ],
  "_from": "find-remove@>=1.0.0 <2.0.0",
  "_id": "find-remove@1.0.1",
  "_inCache": true,
  "_location": "/find-remove",
  "_nodeVersion": "7.7.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/find-remove-1.0.1.tgz_1489805018713_0.8894907415378839"
  },
  "_npmUser": {
    "name": "michael.heuberger",
    "email": "michael.heuberger@binarykitchen.com"
  },
  "_npmVersion": "4.4.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "find-remove@^1.0.0",
    "scope": null,
    "escapedName": "find-remove",
    "name": "find-remove",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/create-react-app-sass"
  ],
  "_resolved": "https://registry.npmjs.org/find-remove/-/find-remove-1.0.1.tgz",
  "_shasum": "72a2de627cdea2d4a8723be5fbb24abfb73f9b52",
  "_shrinkwrap": null,
  "_spec": "find-remove@^1.0.0",
  "_where": "/Volumes/lmssd01/Workspaces/repository/git/reactjs/react-game-of-life-2/node_modules/create-react-app-sass",
  "author": {
    "name": "Michael Heuberger",
    "email": "michael.heuberger@binarykitchen.com"
  },
  "bugs": {
    "url": "https://github.com/binarykitchen/find-remove/issues"
  },
  "dependencies": {
    "fmerge": "1.2.0",
    "rimraf": "2.6.1"
  },
  "description": "recursively finds files and/or directories by filter options from a start directory onwards and deletes these according to plenty of options you can configure. useful if you want to clean up stuff within a directory in your node.js app.",
  "devDependencies": {
    "async": "2.1.5",
    "mkdirp": "0.5.1",
    "nodeunit": "0.11.0",
    "randomstring": "1.1.5"
  },
  "directories": {
    "test": "tests"
  },
  "dist": {
    "shasum": "72a2de627cdea2d4a8723be5fbb24abfb73f9b52",
    "tarball": "https://registry.npmjs.org/find-remove/-/find-remove-1.0.1.tgz"
  },
  "engines": {
    "node": ">=4.1.0"
  },
  "gitHead": "c58ed1aca560f54033ce88f4fdd49cf6afc7dac2",
  "homepage": "https://github.com/binarykitchen/find-remove#readme",
  "keywords": [
    "file",
    "remove",
    "rmdir",
    "unlink",
    "find",
    "filter",
    "recursive",
    "fs",
    "delete",
    "extension",
    "file stats"
  ],
  "license": "MIT",
  "main": "find-remove.js",
  "maintainers": [
    {
      "name": "michael.heuberger",
      "email": "michael.heuberger@binarykitchen.com"
    }
  ],
  "name": "find-remove",
  "optionalDependencies": {},
  "readme": "# find-remove v1.0 (breaking!)\n\n[![Build Status](https://travis-ci.org/binarykitchen/find-remove.png?branch=master)](https://travis-ci.org/binarykitchen/find-remove)\n\nrecursively finds files by filter options from a start directory onwards and deletes those who meet conditions you can define. useful if you want to clean up a directory in your node.js app.\n\nyou can filter by extensions, names, level in directory structure, file creation date and ignore by name, yeah!\n\n## installation\n\nto install find-remove, use [npm](http://github.com/isaacs/npm):\n\n    $ npm install -S find-remove\n\nthen in your node.js app, get reference to the function like that:\n\n```javascript\nvar findRemoveSync = require('find-remove')\n```\n\n## quick examples\n\n### 1. delete all *.bak or *.log files within the /temp/ directory\n\n```javascript\nvar result = findRemoveSync('/temp', {extensions: ['.bak', '.log']})\n```\n\nthe return value `result` is a json object with successfully deleted files. if you output `result` to the console, you will get something like this:\n\n```\n{\n    '/tmp/haumiblau.bak': true,\n    '/tmp/dump.log': true\n}\n```\n\n### 2. delete all files called 'dump.log' within the /temp/ directory and within its subfolders\n\n```javascript\nvar result = findRemoveSync('/temp', {files: 'dump.log'})\n```\n\n### 3. same as above, but also deletes any subfolders\n\n```javascript\nvar result = findRemoveSync('/temp', {files: 'dump.log', dir: '*'})\n```\n\n### 4. delete all *.bak files but not file 'haumiblau.bak'\n\n```javascript\nvar result = findRemoveSync('/temp', {extensions: ['.bak'], ignore: 'haumiblau.bak'})\n```\n\n### 5. delete recursively any subdirectory called 'CVS' within /dist/\n\n```javascript\nvar result = findRemoveSync('/dist', {dir: 'CVS'})\n```\n\n### 6. delete all jpg files older than one hour\n\n```javascript\nvar result = findRemoveSync('/tmp', {age: {seconds: 3600}, extensions: '.jpg'})\n```\n\n### 7. apply filter options only for two levels inside the /temp directory for all tmp files\n\n```javascript\nvar result = findRemoveSync('/tmp', {maxLevel: 2, extensions: '.tmp'})\n```\n\nthis deletes any `.tmp` files up to two levels, for example: `/tmp/level1/level2/a.tmp`\n\nbut not `/tmp/level1/level2/level3/b.tmp`\n\nwhy the heck do we have this `maxLevel` option? because of performance. if you care about deep subfolders, apply that option to get a speed boost.\n\n### 8. delete everything recursively (hey, who needs that when you can use nodejs' fs.unlink?)\n\n```javascript\nvar result = findRemoveSync(rootDirectory, {dir: \"*\", files: \"*.*\"})\n```\n\n## api\n\n### findRemoveSync(dir, options)\n\nfindRemoveSync takes any start directory and searches files from there for removal. the selection of files for removal depends on the given options. and at last, it deletes the selected files/directories.\n\n__arguments__\n\n* `dir` - any directory to search for files and/or directories for deletion (does not delete that directory itself)\n* options - currently those properties are supported:\n    * `files` - can be a string or an array of files you want to delete within `dir`.\n    * `dir` - can be a string or an array of directories you want to delete within `dir`.\n    * `extensions` - this too, can be a string or an array of file extenstions you want to delete within `dir`.\n    * `ignore` - useful to exclude some files. again, can be a string or an array of file names you do NOT want to delete within `dir`\n    * `age.seconds` - can be any float number. findRemoveSync then compares it with the file stats and deletes those with creation times older than `age.seconds`\n    * `maxLevel` - advanced: limits filtering to a certain level. useful for performance. recommended for crawling huge directory trees.\n    * `test` - advanced: set to true for a test run, meaning it does not delete anything but returns a JSON of files/directories it would have deleted. useful for testing.\n\nas a precaution, nothing happens when there are no options.\n\nthe unit tests are good examples on how to use the above arguments.\n\n__returns__\n\nJSON of files/directories that were deleted.\n\n## todo\n\n* needs a rewrite\n* add more filtering options (combinations, regex, etc.)\n* have an asynchronous solution\n* use streams instead\n\n## license\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/binarykitchen/find-remove.git"
  },
  "scripts": {
    "test": "nodeunit tests/basics.js"
  },
  "version": "1.0.1"
}
